version: "3"
services:
  db:
    image: library/postgres:13
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgres/:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka-1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  gateway:
    container_name: gateway
    build: ./GatewayService/
    restart: on-failure
    volumes:
      - ./GatewayService/:/GatewayService/
    ports:
      - '8080:8080'
  ticket:
    container_name: ticket
    build: ./TicketService/
    restart: on-failure
    volumes:
      - ./TicketService/:/TicketService/
    ports:
      - '8070:8070'
  flight:
    container_name: flight
    build: ./FlightService/
    restart: on-failure
    volumes:
      - ./FlightService/:/FlightService/
    ports:
      - '8060:8060'
  bonus:
    container_name: bonus
    build: ./BonusService/
    restart: on-failure
    volumes:
      - ./BonusService/:/BonusService/
    ports:
      - '8050:8050'
    depends_on:
      - db

# TODO добавить сервисы

volumes:
  db-data: